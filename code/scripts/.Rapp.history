install.packages("pls")
library("pls")
?plsr()
credit <- read.csv('../../data/Credit.csv')
bplot.xy(credit$Gender, credit$Balance)
library(fields)
bplot.xy(credit$Gender, credit$Balance)
bplot.xy(credit$Balance ~ credit$Gen	der)
credit$Gender
hist(credit$Balance ~ credit$Gen	der)
hist(credit$Balance ~ credit$Gender)
bplot.xy(credit$Balance ~ credit$Gender)
gender = as.list(levels(credit$Gender))
bplot.xy(credit$Balance ~ gender)
library("pls")#
#
training_data <- read.csv("../../data/training_data.csv")#
training_data <- training_data[,-1]#
#
response <- training_data$Balance#
response <- as.matrix(response)#
predictors <- training_data[,-12]#
predictors <- as.matrix(predictors)#
#
set.seed(1)#
plsr_obj <- plsr(response ~ predictors, validation = "CV")
plsr_obj
plsr_model <- plsr_obj$validation$PRESS
plsr_model
validationplot(plsr_obj, val.type = "MSEP")
colnames(test_data)
test_data <- read.csv("../../data/test_data.csv")#
test_response <- test_data$balance#
test_data <- test_data[, -1]
colnames(test_data)
test_data <- read.csv("../../data/test_data.csv")#
test_response <- test_data$balance#
test_data <- test_data[, -1]#
test_predictors <- test_data[,-12]#
test_predictors <- as.matrix(test_predictors)
test_plsr <- predict(plsr_obj, newx = test_predictors, s = "validation$PRESS", type = "response")
library("pls")#
#
training_data <- read.csv("../../data/training_data.csv")#
training_data <- training_data[,-1]#
#
response <- training_data$Balance#
response <- as.matrix(response)#
predictors <- training_data[,-12]#
predictors <- as.matrix(predictors)#
#
set.seed(1)#
plsr_obj <- plsr(response ~ predictors, validation = "CV")#
#
plsr_model <- plsr_obj$validation$PRESS#
#
sink("../../plsr_model.txt")#
plsr_model#
sink()#
#
png("../../images/CV_Errors_plsr.png")#
validationplot(plsr_obj, val.type = "MSEP")#
dev.off()#
#
test_data <- read.csv("../../data/test_data.csv")#
test_response <- test_data$balance#
test_data <- test_data[, -1]#
test_predictors <- test_data[,-12]#
test_predictors <- as.matrix(test_predictors)#
#
test_plsr <- predict(plsr_obj, newx = test_predictors, s = "validation$PRESS", type = "response")
test_plsr
save(test_plsr, file = "../../data/testing_plsr.RData")
full_data <- read.csv("../../data/scaled_credit.csv")
full_data <- full_data[,-1]
full_data <- read.csv("../../data/scaled_credit.csv")#
full_data <- full_data[,-1]#
#
full_response <- full_data$Balance#
full_response <- as.matrix(full_response)#
full_predictors <- full_data[,-12]#
full_predictors <- as.matrix(full_predictors)#
#
full_plsr <- plsr(full_response ~ full_predictors, validation = "CV")#
#
plsr_coef <- coef(full_plsr)#
save(plsr_coef, file = "../../data/full_coefficients_plsr.RData")
credit <- read.csv('../../data/Credit.csv')
library('ggplot2')#
ggplot(credit, aes(x = Gender, y = Balance))
ggplot(credit, aes(x = credit$Gender, y = credit$Balance))
ggplot(credit, aes(x = credit$Gender, y = credit$Balance)) + geom_boxplot()
ggplot(credit, aes(x = Gender, y = Balance)) + geom_boxplot()
ggplot(credit, aes(x = Gender, y = Balance), xlab = Gender) + geom_boxplot()
gender_conditional_plot <- ggplot(credit, aes(x = Gender, y = Balance), xlab = Gender) + geom_boxplot()
gender_conditional_plot <- ggplot(credit, aes(x = Gender, y = Balance)) + geom_boxplot()
png('../../images/gender_conditional_plot.png')#
gender_conditional_plot#
dev.off()
gender_conditional_plot <- ggplot(credit, aes(x = Gender, y = Balance, fill = gender)) + geom_boxplot()
png('../../images/gender_conditional_plot.png')#
gender_conditional_plot#
dev.off()
gender_conditional_plot <- ggplot(credit, aes(x = Gender, y = Balance, fill = Gender)) + geom_boxplot()
png('../../images/gender_conditional_plot.png')#
gender_conditional_plot#
dev.off()
ethnicity_conditional_plot <- ggplot(credit, aes(x = Ethnicity, y = Balance, fill = Ethnicity)) + geom_boxplot()#
#
png('../../images/ethnicity_conditional_plot.png')#
ethnicity_conditional_plot#
dev.off()
student_conditional_plot <- ggplot(credit, aes(x = Student, y = Balance, fill = Student)) + geom_boxplot()#
#
png('../../images/gender_conditional_plot.png')#
student_conditional_plot#
dev.off()
library("pls")#
#
training_data <- read.csv("../../data/training_data.csv")#
training_data <- training_data[,-1]#
#
response <- training_data$Balance#
response <- as.matrix(response)#
predictors <- training_data[,-12]#
predictors <- as.matrix(predictors)#
#
set.seed(1)#
plsr_obj <- plsr(response ~ predictors, validation = "CV")#
#
plsr_model <- plsr_obj$validation$PRESS#
#
sink("../../data/plsr_model.txt")#
plsr_model#
sink()
gender_conditional_plot <- ggplot(credit, aes(x = Gender, y = Balance, fill = Gender)) + geom_boxplot()#
#
png('../../images/gender_conditional_plot.png')#
gender_conditional_plot#
dev.off()#
ethnicity_conditional_plot <- ggplot(credit, aes(x = Ethnicity, y = Balance, fill = Ethnicity)) + geom_boxplot()#
#
png('../../images/ethnicity_conditional_plot.png')#
ethnicity_conditional_plot#
dev.off()#
student_conditional_plot <- ggplot(credit, aes(x = Student, y = Balance, fill = Student)) + geom_boxplot()#
#
png('../../images/student_conditional_plot.png')#
student_conditional_plot#
dev.off()
married_conditional_plot <- ggplot(credit, aes(x = Married, y = Balance, fill = Married)) + geom_boxplot()#
#
png('../../images/married_conditional_plot.png')#
married_conditional_plot#
dev.off()
